plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)
}

android {
    namespace 'ru.netology.nmedia'
    compileSdk 35

    defaultConfig {
        applicationId "ru.netology.nmedia"
        minSdk 23
        targetSdk 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    def lifecycle_version = "2.8.4"
//    def arch_version = "2.2.0"

    def recyclerview_version = "1.1.0"
    implementation "androidx.recyclerview:recyclerview:1.3.2"

// ViewModel
    implementation libs.androidx.lifecycle.viewmodel.ktx
    // ViewModel utilities for Compose
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    // LiveData
    implementation libs.androidx.lifecycle.livedata.ktx
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    // Lifecycle utilities for Compose
    implementation "androidx.lifecycle:lifecycle-runtime-compose:$lifecycle_version"

    // Saved state module for ViewModel
    implementation libs.androidx.lifecycle.viewmodel.savedstate

    // Annotation processor
    implementation libs.androidx.lifecycle.common.java8
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation libs.androidx.lifecycle.common.java8

    // optional - helpers for implementing LifecycleOwner in a Service
    implementation libs.androidx.lifecycle.service

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation libs.androidx.lifecycle.process

    // optional - ReactiveStreams support for LiveData
    implementation libs.androidx.lifecycle.reactivestreams.ktx

    // optional - Test helpers for LiveData
    testImplementation libs.androidx.core.testing

    // optional - Test helpers for Lifecycle runtime
    testImplementation libs.androidx.lifecycle.runtime.testing


    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.activity
    implementation libs.androidx.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
}